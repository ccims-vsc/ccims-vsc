{
	"name": "ccims-vsc",
	"description": "CCIMS - Cross-Component Issue Management System integration ",
	"version": "0.0.1",
	"publisher": "Niklas Krieger",
	"engines": {
		"vscode": "^1.50.0"
	},
	"extensionKind": [
		"ui",
		"workspace"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onView:ccims.issueView",
		"onView:ccims.issueList",
		"onCommand:ccims.reloadIssueList",
		"onCommand:ccims.checkApiStatus",
		"onCommand:ccims.selectComponent",
		"onCommand:ccims.newIssue",
		"onCommand:ccims.setupExtension",
		"onCommand:ccims.login"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/nk-coding/ccims-vsc.git"
	},
	"main": "./out/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "issue-explorer",
					"title": "CCIMS explorer",
					"icon": "$(type-hierarchy)"
				}
			]
		},
		"views": {
			"issue-explorer": [
				{
					"type": "tree",
					"id": "ccims.issueList",
					"name": "Issues",
					"visibility": "visible"
				},
				{
					"type": "webview",
					"id": "ccims.issueView",
					"name": "Issue",
					"visibility": "visible"
				}
			]
		},
		"configuration": {
			"title": "CCIMS",
			"properties": {
				"ccims.url": {
					"type": "string",
					"default": "http://localhost:8080",
					"description": "The endpoint of the used CCIMS instance",
					"scope": "window"
				},
				"ccims.componentId": {
					"type": "string",
					"default": "",
					"description": "The id of the component, of which issues should be displayed",
					"scope": "window"
				}
			}
		},
		"commands": [
			{
				"command": "ccims.reloadIssueList",
				"title": "Reload Issue list",
				"category": "CCIMS",
				"icon": "$(refresh)"
			},
			{
				"command": "ccims.checkApiStatus",
				"title": "Check api status",
				"category": "CCIMS"
			},
			{
				"command": "ccims.selectComponent",
				"title": "Select component",
				"category": "CCIMS"
			},
			{
				"command": "ccims.newIssue",
				"title": "Create new issue",
				"category": "CCIMS",
				"icon": "$(add)"
			},
			{
				"command": "ccims.setupExtension",
				"title": "Setup extension",
				"category": "CCIMS"
			},
			{
				"command": "ccims.login",
				"title": "Login",
				"category": "CCIMS"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "ccims.reloadIssueList",
					"when": "view == ccims.issueList",
					"group": "navigation"
				},
				{
					"command": "ccims.newIssue",
					"when": "view == ccims.issueList",
					"group": "navigation"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "ccims.issueList",
				"contents": "In order to use CCIMS features, please open a folder.\n[Open Folder](command:vscode.openFolder)",
				"when": "workbenchState == empty"
			},
			{
				"view": "ccims.issueList",
				"contents": "The api URL is currently not set\n[Setup extension](command:ccims.setupExtension)\n[Open Settings](command:workbench.action.openSettings2)",
				"when": "workbenchState != empty && ccims.apiStatus == 2"
			},
			{
				"view": "ccims.issueList",
				"contents": "The api is currently not available.\n[Setup extension](command:ccims.setupExtension)\n[Check again](command:ccims.checkApiStatus)\n[Open Settings](command:workbench.action.openSettings2)",
				"when": "workbenchState != empty && ccims.apiStatus == 3"
			},
			{
				"view": "ccims.issueList",
				"contents": "You are currently not logged in.\n[Login](command:ccims.login)",
				"when": "workbenchState != empty && ccims.apiStatus == 4"
			},
			{
				"view": "ccims.issueList",
				"contents": "Your login data is invalid.\n[Login](command:ccims.login)",
				"when": "workbenchState != empty && ccims.apiStatus == 5"
			},
			{
				"view": "ccims.issueList",
				"contents": "There is no component configured\n[Select component](command:ccims.selectComponent)\n[Open Settings](command:workbench.action.openSettings2)",
				"when": "workbenchState != empty && ccims.apiStatus == 6"
			},
			{
				"view": "ccims.issueList",
				"contents": "The currently configured component does not exist or is not accessible\n[Select component](command:ccims.selectComponent)\n[Open Settings](command:workbench.action.openSettings2)",
				"when": "workbenchState != empty && ccims.apiStatus == 7"
			},
			{
				"view": "ccims.issueList",
				"contents": "There are no issues on the selected component\n[Create issue](command:ccims.newIssue)\n[Select component](command:ccims.selectComponent)",
				"when": "workbenchState != empty && ccims.apiStatus == 1"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run build",
		"compile": "tsc -p ./",
		"lint": "eslint . --ext .ts,.tsx",
		"watch": "tsc -w -p ./",
		"init-all": "npm i && cd issue-view && npm i",
		"build": "cd issue-view && npm run build && cd .. && npm run compile",
		"graphql-codegen": "graphql-codegen --config codegen.yml"
	},
	"devDependencies": {
		"@graphql-codegen/add": "^2.0.2",
		"@graphql-codegen/cli": "1.21.5",
		"@graphql-codegen/typescript": "1.22.1",
		"@graphql-codegen/typescript-graphql-request": "^3.2.1",
		"@graphql-codegen/typescript-operations": "1.18.0",
		"@types/node": "^15.12.1",
		"@types/vscode": "^1.50.0",
		"@typescript-eslint/eslint-plugin": "^4.16.0",
		"@typescript-eslint/parser": "^4.16.0",
		"@vue/eslint-config-typescript": "^7.0.0",
		"eslint": "^7.21.0",
		"eslint-plugin-vue": "^7.10.0",
		"typescript": "^4.2.2"
	},
	"dependencies": {
		"axios": "^0.21.1",
		"graphql": "^15.5.0",
		"graphql-tools": "^7.0.5",
		"keytar": "^7.7.0"
	}
}
